// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"XP9+/f8DAAD//xuFDkmA1wAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
