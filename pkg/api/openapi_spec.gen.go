// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAAA//9yIC5tYNcAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
