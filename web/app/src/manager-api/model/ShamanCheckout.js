/**
 * Flamenco manager
 * Render Farm manager API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShamanFileSpec from './ShamanFileSpec';

/**
 * The ShamanCheckout model module.
 * @module model/ShamanCheckout
 * @version 0.0.0
 */
class ShamanCheckout {
    /**
     * Constructs a new <code>ShamanCheckout</code>.
     * Set of files with their SHA256 checksum, size in bytes, and desired location in the checkout directory.
     * @alias module:model/ShamanCheckout
     * @param files {Array.<module:model/ShamanFileSpec>} 
     * @param checkoutPath {String} Path where the Manager should create this checkout. It is relative to the Shaman checkout path as configured on the Manager. In older versions of the Shaman this was just the \"checkout ID\", but in this version it can be a path like `project-slug/scene-name/unique-ID`. 
     */
    constructor(files, checkoutPath) { 
        
        ShamanCheckout.initialize(this, files, checkoutPath);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, files, checkoutPath) { 
        obj['files'] = files;
        obj['checkoutPath'] = checkoutPath;
    }

    /**
     * Constructs a <code>ShamanCheckout</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShamanCheckout} obj Optional instance to populate.
     * @return {module:model/ShamanCheckout} The populated <code>ShamanCheckout</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShamanCheckout();

            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], [ShamanFileSpec]);
            }
            if (data.hasOwnProperty('checkoutPath')) {
                obj['checkoutPath'] = ApiClient.convertToType(data['checkoutPath'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/ShamanFileSpec>} files
 */
ShamanCheckout.prototype['files'] = undefined;

/**
 * Path where the Manager should create this checkout. It is relative to the Shaman checkout path as configured on the Manager. In older versions of the Shaman this was just the \"checkout ID\", but in this version it can be a path like `project-slug/scene-name/unique-ID`. 
 * @member {String} checkoutPath
 */
ShamanCheckout.prototype['checkoutPath'] = undefined;






export default ShamanCheckout;

