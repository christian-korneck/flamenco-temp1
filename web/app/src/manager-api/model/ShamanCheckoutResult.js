/**
 * Flamenco manager
 * Render Farm manager API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShamanCheckoutResult model module.
 * @module model/ShamanCheckoutResult
 * @version 0.0.0
 */
class ShamanCheckoutResult {
    /**
     * Constructs a new <code>ShamanCheckoutResult</code>.
     * The result of a Shaman checkout.
     * @alias module:model/ShamanCheckoutResult
     * @param checkoutPath {String} Path where the Manager created this checkout. This can be different than what was requested, as the Manager will ensure a unique directory. The path is relative to the Shaman checkout path as configured on the Manager. 
     */
    constructor(checkoutPath) { 
        
        ShamanCheckoutResult.initialize(this, checkoutPath);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, checkoutPath) { 
        obj['checkoutPath'] = checkoutPath;
    }

    /**
     * Constructs a <code>ShamanCheckoutResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShamanCheckoutResult} obj Optional instance to populate.
     * @return {module:model/ShamanCheckoutResult} The populated <code>ShamanCheckoutResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShamanCheckoutResult();

            if (data.hasOwnProperty('checkoutPath')) {
                obj['checkoutPath'] = ApiClient.convertToType(data['checkoutPath'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Path where the Manager created this checkout. This can be different than what was requested, as the Manager will ensure a unique directory. The path is relative to the Shaman checkout path as configured on the Manager. 
 * @member {String} checkoutPath
 */
ShamanCheckoutResult.prototype['checkoutPath'] = undefined;






export default ShamanCheckoutResult;

