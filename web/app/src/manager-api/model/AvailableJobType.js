/**
 * Flamenco manager
 * Render Farm manager API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvailableJobSetting from './AvailableJobSetting';

/**
 * The AvailableJobType model module.
 * @module model/AvailableJobType
 * @version 0.0.0
 */
class AvailableJobType {
    /**
     * Constructs a new <code>AvailableJobType</code>.
     * Job type supported by this Manager, and its parameters.
     * @alias module:model/AvailableJobType
     * @param name {String} 
     * @param label {String} 
     * @param settings {Array.<module:model/AvailableJobSetting>} 
     * @param etag {String} Hash of the job type. If the job settings or the label change, this etag will change. This is used on job submission to ensure that the submitted job settings are up to date. 
     */
    constructor(name, label, settings, etag) { 
        
        AvailableJobType.initialize(this, name, label, settings, etag);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, label, settings, etag) { 
        obj['name'] = name;
        obj['label'] = label;
        obj['settings'] = settings;
        obj['etag'] = etag;
    }

    /**
     * Constructs a <code>AvailableJobType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailableJobType} obj Optional instance to populate.
     * @return {module:model/AvailableJobType} The populated <code>AvailableJobType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailableJobType();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = ApiClient.convertToType(data['settings'], [AvailableJobSetting]);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
AvailableJobType.prototype['name'] = undefined;

/**
 * @member {String} label
 */
AvailableJobType.prototype['label'] = undefined;

/**
 * @member {Array.<module:model/AvailableJobSetting>} settings
 */
AvailableJobType.prototype['settings'] = undefined;

/**
 * Hash of the job type. If the job settings or the label change, this etag will change. This is used on job submission to ensure that the submitted job settings are up to date. 
 * @member {String} etag
 */
AvailableJobType.prototype['etag'] = undefined;






export default AvailableJobType;

