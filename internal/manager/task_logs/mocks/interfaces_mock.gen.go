// Code generated by MockGen. DO NOT EDIT.
// Source: git.blender.org/flamenco/internal/manager/task_logs (interfaces: LocalStorage,ChangeBroadcaster)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	api "git.blender.org/flamenco/pkg/api"
	gomock "github.com/golang/mock/gomock"
)

// MockLocalStorage is a mock of LocalStorage interface.
type MockLocalStorage struct {
	ctrl     *gomock.Controller
	recorder *MockLocalStorageMockRecorder
}

// MockLocalStorageMockRecorder is the mock recorder for MockLocalStorage.
type MockLocalStorageMockRecorder struct {
	mock *MockLocalStorage
}

// NewMockLocalStorage creates a new mock instance.
func NewMockLocalStorage(ctrl *gomock.Controller) *MockLocalStorage {
	mock := &MockLocalStorage{ctrl: ctrl}
	mock.recorder = &MockLocalStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocalStorage) EXPECT() *MockLocalStorageMockRecorder {
	return m.recorder
}

// ForJob mocks base method.
func (m *MockLocalStorage) ForJob(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ForJob", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// ForJob indicates an expected call of ForJob.
func (mr *MockLocalStorageMockRecorder) ForJob(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ForJob", reflect.TypeOf((*MockLocalStorage)(nil).ForJob), arg0)
}

// MockChangeBroadcaster is a mock of ChangeBroadcaster interface.
type MockChangeBroadcaster struct {
	ctrl     *gomock.Controller
	recorder *MockChangeBroadcasterMockRecorder
}

// MockChangeBroadcasterMockRecorder is the mock recorder for MockChangeBroadcaster.
type MockChangeBroadcasterMockRecorder struct {
	mock *MockChangeBroadcaster
}

// NewMockChangeBroadcaster creates a new mock instance.
func NewMockChangeBroadcaster(ctrl *gomock.Controller) *MockChangeBroadcaster {
	mock := &MockChangeBroadcaster{ctrl: ctrl}
	mock.recorder = &MockChangeBroadcasterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChangeBroadcaster) EXPECT() *MockChangeBroadcasterMockRecorder {
	return m.recorder
}

// BroadcastTaskLogUpdate mocks base method.
func (m *MockChangeBroadcaster) BroadcastTaskLogUpdate(arg0 api.SocketIOTaskLogUpdate) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BroadcastTaskLogUpdate", arg0)
}

// BroadcastTaskLogUpdate indicates an expected call of BroadcastTaskLogUpdate.
func (mr *MockChangeBroadcasterMockRecorder) BroadcastTaskLogUpdate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BroadcastTaskLogUpdate", reflect.TypeOf((*MockChangeBroadcaster)(nil).BroadcastTaskLogUpdate), arg0)
}
