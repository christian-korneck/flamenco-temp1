// Code generated by MockGen. DO NOT EDIT.
// Source: git.blender.org/flamenco/internal/manager/api_impl (interfaces: VariableReplacer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	config "git.blender.org/flamenco/internal/manager/config"
	gomock "github.com/golang/mock/gomock"
)

// MockVariableReplacer is a mock of VariableReplacer interface.
type MockVariableReplacer struct {
	ctrl     *gomock.Controller
	recorder *MockVariableReplacerMockRecorder
}

// MockVariableReplacerMockRecorder is the mock recorder for MockVariableReplacer.
type MockVariableReplacerMockRecorder struct {
	mock *MockVariableReplacer
}

// NewMockVariableReplacer creates a new mock instance.
func NewMockVariableReplacer(ctrl *gomock.Controller) *MockVariableReplacer {
	mock := &MockVariableReplacer{ctrl: ctrl}
	mock.recorder = &MockVariableReplacerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVariableReplacer) EXPECT() *MockVariableReplacerMockRecorder {
	return m.recorder
}

// ConvertTwoWayVariables mocks base method.
func (m *MockVariableReplacer) ConvertTwoWayVariables(arg0 <-chan string, arg1 chan<- string, arg2 config.VariableAudience, arg3 config.VariablePlatform) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ConvertTwoWayVariables", arg0, arg1, arg2, arg3)
}

// ConvertTwoWayVariables indicates an expected call of ConvertTwoWayVariables.
func (mr *MockVariableReplacerMockRecorder) ConvertTwoWayVariables(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConvertTwoWayVariables", reflect.TypeOf((*MockVariableReplacer)(nil).ConvertTwoWayVariables), arg0, arg1, arg2, arg3)
}

// ExpandVariables mocks base method.
func (m *MockVariableReplacer) ExpandVariables(arg0 <-chan string, arg1 chan<- string, arg2 config.VariableAudience, arg3 config.VariablePlatform) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExpandVariables", arg0, arg1, arg2, arg3)
}

// ExpandVariables indicates an expected call of ExpandVariables.
func (mr *MockVariableReplacerMockRecorder) ExpandVariables(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExpandVariables", reflect.TypeOf((*MockVariableReplacer)(nil).ExpandVariables), arg0, arg1, arg2, arg3)
}

// ResolveVariables mocks base method.
func (m *MockVariableReplacer) ResolveVariables(arg0 config.VariableAudience, arg1 config.VariablePlatform) map[string]config.ResolvedVariable {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveVariables", arg0, arg1)
	ret0, _ := ret[0].(map[string]config.ResolvedVariable)
	return ret0
}

// ResolveVariables indicates an expected call of ResolveVariables.
func (mr *MockVariableReplacerMockRecorder) ResolveVariables(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveVariables", reflect.TypeOf((*MockVariableReplacer)(nil).ResolveVariables), arg0, arg1)
}
